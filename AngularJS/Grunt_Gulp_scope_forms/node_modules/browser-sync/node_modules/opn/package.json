{
  "name": "opn",
  "version": "3.0.3",
  "description": "A better node-open. Opens stuff like websites, files, executables. Cross-platform.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/opn"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js",
    "xdg-open"
  ],
  "keywords": [
    "app",
    "open",
    "opn",
    "opener",
    "opens",
    "launch",
    "start",
    "xdg-open",
    "xdg",
    "default",
    "cmd",
    "browser",
    "editor",
    "executable",
    "exe",
    "url",
    "urls",
    "arguments",
    "args",
    "spawn",
    "exec",
    "child",
    "process",
    "website",
    "file"
  ],
  "dependencies": {
    "object-assign": "^4.0.1"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "# opn\n\n> A better [node-open](https://github.com/pwnall/node-open). Opens stuff like websites, files, executables. Cross-platform.\n\n\n#### Why?\n\n- Actively maintained\n- Supports app arguments\n- Safer as it uses `spawn` instead of `exec`\n- Fixes most of the open `node-open` issues\n- Includes the latest [`xdg-open` script](http://cgit.freedesktop.org/xdg/xdg-utils/commit/?id=c55122295c2a480fa721a9614f0e2d42b2949c18) for Linux\n\n\n## Install\n\n```\n$ npm install --save opn\n```\n\n\n## Usage\n\n```js\nvar opn = require('opn');\n\nopn('unicorn.png');\n// opens the image in the default image viewer\n\nopn('http://sindresorhus.com');\n// opens the url in the default browser\n\nopn('http://sindresorhus.com', {app: 'firefox'});\n// specify the app to open in\n\nopn('http://sindresorhus.com', {app: ['google chrome', '--incognito']});\n// specify app arguments\n```\n\n\n## API\n\nUses the command `open` on OS X, `start` on Windows and `xdg-open` on other platforms.\n\n### opn(target, [options], [callback])\n\nReturns the [spawned child process](https://nodejs.org/api/child_process.html#child_process_class_childprocess). You'd normally not need to use this for anything, but it can be useful if you'd like to attach custom event listeners or perform other operations directly on the spawned process.\n\n#### target\n\n*Required*  \nType: `string`\n\nThe thing you want to open. Can be a URL, file, or executable.\n\nOpens in the default app for the file type. Eg. URLs opens in your default browser.\n\n#### options\n\nType: `object`\n\n##### wait\n\nType: `boolean`  \nDefault: `true`\n\nWait for the opened app to exit before calling the `callback`. If `false` it's called immediately when opening the app.\n\nOn Windows you have to explicitly specify an app for it to be able to wait.\n\n##### app\n\nType: `string`, `array`\n\nSpecify the app to open the `target` with, or an array with the app and app arguments.\n\nThe app name is platform dependent. Don't hard code it in reusable modules. Eg. Chrome is `google chrome` on OS X, `google-chrome` on Linux and `chrome` on Windows.\n\n#### callback(error)\n\nType: `function`\n\nCalled when the opened app exits, or if `wait: false`, immediately when opening.\n\n\n## Related\n\n- [opn-cli](https://github.com/sindresorhus/opn-cli) - CLI for this module\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "opn@3.0.3",
  "_from": "opn@^3.0.2"
}
