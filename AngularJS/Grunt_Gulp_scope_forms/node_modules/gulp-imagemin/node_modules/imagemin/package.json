{
  "name": "imagemin",
  "version": "4.0.0",
  "description": "Minify images",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "imagemin/imagemin"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">=2.1.5"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "compress",
    "gif",
    "image",
    "jpeg",
    "minify",
    "png",
    "svg"
  ],
  "dependencies": {
    "buffer-to-vinyl": "^1.0.0",
    "concat-stream": "^1.4.6",
    "optional": "^0.1.0",
    "readable-stream": "^2.0.0",
    "stream-combiner2": "^1.1.1",
    "vinyl-fs": "^2.1.1",
    "imagemin-gifsicle": "^4.0.0",
    "imagemin-jpegtran": "^4.0.0",
    "imagemin-optipng": "^4.0.0",
    "imagemin-svgo": "^4.0.0"
  },
  "devDependencies": {
    "ava": "^0.0.4"
  },
  "optionalDependencies": {
    "imagemin-gifsicle": "^4.0.0",
    "imagemin-jpegtran": "^4.0.0",
    "imagemin-optipng": "^4.0.0",
    "imagemin-svgo": "^4.0.0"
  },
  "readme": "# imagemin [![Build Status](https://img.shields.io/travis/imagemin/imagemin.svg)](https://travis-ci.org/imagemin/imagemin) [![Build status](https://ci.appveyor.com/api/projects/status/wlnem7wef63k4n1t?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin)\n\n> Minify images seamlessly\n\n\n## Install\n\n```\n$ npm install --save imagemin\n```\n\n\n## Usage\n\n```js\nvar Imagemin = require('imagemin');\n\nnew Imagemin()\n\t.src('images/*.{gif,jpg,png,svg}')\n\t.dest('build/images')\n\t.use(Imagemin.jpegtran({progressive: true}))\n\t.run(function (err, files) {\n\t\tconsole.log(files[0]);\n\t\t// => {path: 'build/images/foo.jpg', contents: <Buffer 89 50 4e ...>}\n\t});\n```\n\nYou can use [gulp-rename](https://github.com/hparra/gulp-rename) to rename your files:\n\n```js\nvar Imagemin = require('imagemin');\nvar rename = require('gulp-rename');\n\nnew Imagemin()\n\t.src('images/foo.png')\n\t.use(rename('bar.png'));\n```\n\n\n## API\n\n### new Imagemin()\n\nCreates a new `Imagemin` instance.\n\n### .src(file)\n\nType: `array`, `buffer` or `string`\n\nSet the files to be optimized. Takes a buffer, glob string or an array of glob strings \nas argument.\n\n### .dest(folder)\n\nType: `string`\n\nSet the destination folder to where your files will be written. If you don't set \nany destination no files will be written.\n\n### .use(plugin)\n\nType: `function`\n\nAdd a `plugin` to the middleware stack.\n\n### .run(callback)\n\nType: `function`\n\nOptimize your files with the given settings.\n\n#### callback(err, files)\n\nThe callback will return an array of vinyl files in `files`.\n\n\n## Plugins\n\nThe following [plugins](https://www.npmjs.org/browse/keyword/imageminplugin) are bundled with imagemin:\n\n* [gifsicle](#gifsicleoptions) — Compress GIF images.\n* [jpegtran](#jpegtranoptions) — Compress JPG images.\n* [optipng](#optipngoptions) — Compress PNG images losslessly.\n* [svgo](#svgooptions) — Compress SVG images.\n\n### .gifsicle(options)\n\nCompress GIF images.\n\n```js\nvar Imagemin = require('imagemin');\n\nnew Imagemin()\n\t.use(Imagemin.gifsicle({interlaced: true}));\n```\n\n### .jpegtran(options)\n\nCompress JPG images.\n\n```js\nvar Imagemin = require('imagemin');\n\nnew Imagemin()\n\t.use(Imagemin.jpegtran({progressive: true}));\n```\n\n### .optipng(options)\n\nLossless compression of PNG images.\n\n```js\nvar Imagemin = require('imagemin');\n\nnew Imagemin()\n\t.use(Imagemin.optipng({optimizationLevel: 3}));\n```\n\n### .svgo(options)\n\nCompress SVG images.\n\n```js\nvar Imagemin = require('imagemin');\n\nnew Imagemin()\n\t.use(Imagemin.svgo());\n```\n\n\n## Related\n\n- [imagemin-cli](https://github.com/imagemin/imagemin-cli) - CLI for this module\n- [imagemin-app](https://github.com/imagemin/imagemin-app) - GUI app for this module.\n- [gulp-imagemin](https://github.com/sindresorhus/gulp-imagemin) - Gulp plugin.\n- [grunt-contrib-imagemin](https://github.com/gruntjs/grunt-contrib-imagemin) - Grunt plugin.\n\n\n## License\n\nMIT © [imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "readme.md",
  "_id": "imagemin@4.0.0",
  "_from": "imagemin@^4.0.0"
}
